#!/bin/bash -e

SCRIPT_DIR=$(dirname "$0")
TMP_DIR="$SCRIPT_DIR/../tmp"
TARGET_REPO="https://github.com/golang/tools.git"

#TODO: refactor! use docker image!
source "$SCRIPT_DIR/helpers"

if [ $# -eq 0 ] ;then
    echo "Target repo was not supplied: will use default $TARGET_REPO"
else
    echo "Target repo supplied: will use $1"
    TARGET_REPO=$1
fi

mkdir -p "$TMP_DIR"
pushd "$TMP_DIR" > /dev/null

#TMP_DIR="$(pwd)"

#TODO: consider to handle both latest committed version and local source
#echo "Getting latest TruffleGopher.."
#go get "github.com/michaelgrifalconi/trufflegopher/cmd/tg-cli"
# Using locally built image for now

echo "Getting latest TruffleHog.."
pip install truffleHog &> /dev/null


echo "Writing sample TruffleHog Rule.."
cat << EOF > trufflehog-rules.json
{
    "AWS KEY": "AKIA[0-9A-Z]{16}"
}
EOF

echo "Writing sample TruffleGopher Rule.."
cat << EOF > trufflegopher-rules.yml
signatures:
- exp:  "AKIA[0-9A-Z]{16}"
description:  "AWS KEY"
EOF

popd

echo "Cloning benchmark target repository.."
cloneRepo "$TMP_DIR" "$TARGET_REPO"

TARGET="$TMP_DIR/target-repo"

echo "============================="
echo "STARTING truffleHog scan.."
START=$(date +%s)
set +e
trufflehog --entropy=False --rules "$(pwd)/tmp/trufflehog-rules.json" file:///"$(pwd)/tmp/target-repo" > /dev/null
set -e
END=$(date +%s)
TH_TIME=$((END - START))


echo "============================="
echo "STARTING truffleGopher scan.."
START=$(date +%s)
docker run --rm -v "$(pwd)":/tmp michaelgrifalconi/tg:v1 -signatures="/tmp/tmp/trufflegopher-rules.yml" -repo="/tmp/tmp/target-repo" -dbfile="/tmp/tmp/scanDB"

END=$(date +%s)
TG_TIME=$((END - START))

echo "truffleHog:    ${TH_TIME}s"
echo "truffleGopher: ${TG_TIME}s"
## Not cleaning up, allows to run same benchmark multiple times
#echo "Cleaning up temp dir"
#rm -rf $TMP_DIR